// Code generated by MockGen. DO NOT EDIT.
// Source: publisher/internal/person (interfaces: Male2)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMale2 is a mock of Male2 interface.
type MockMale2 struct {
	ctrl     *gomock.Controller
	recorder *MockMale2MockRecorder
}

// MockMale2MockRecorder is the mock recorder for MockMale2.
type MockMale2MockRecorder struct {
	mock *MockMale2
}

// NewMockMale2 creates a new mock instance.
func NewMockMale2(ctrl *gomock.Controller) *MockMale2 {
	mock := &MockMale2{ctrl: ctrl}
	mock.recorder = &MockMale2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMale2) EXPECT() *MockMale2MockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMale2) Get(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockMale2MockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMale2)(nil).Get), arg0)
}
